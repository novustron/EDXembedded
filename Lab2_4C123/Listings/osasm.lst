


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ; OSasm.s: low-level OS commands, written in assembly   
                                           */
    3 00000000         ; Runs on LM4F120/TM4C123/MSP432
    4 00000000         ; Lab 2 starter file
    5 00000000         ; February 10, 2016
    6 00000000         ;
    7 00000000         
    8 00000000         
    9 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   10 00000000                 THUMB
   11 00000000                 REQUIRE8
   12 00000000                 PRESERVE8
   13 00000000         
   14 00000000                 EXTERN           RunPt       ; currently running
                                                             thread
   15 00000000                 EXPORT           StartOS
   16 00000000                 EXPORT           SysTick_Handler
   17 00000000                 IMPORT           Scheduler
   18 00000000         
   19 00000000         
   20 00000000         SysTick_Handler                      ; 1) Saves R0-R3,R1
                                                            2,LR,PC,PSR
   21 00000000 B672            CPSID            I           ; 2) Prevent interr
                                                            upt during switch
   22 00000002 E92D 0FF0       PUSH             {R4-R11}    ; push to save the 
                                                            remaining registers
                                                             manually
   23 00000006 480F            LDR              R0, =RunPt  ; R0 = &RunPt
   24 00000008 6801            LDR              R1, [R0]    ; R1 = RunPt
   25 0000000A F8C1 D000       STR              SP, [R1]    ; processor's SP is
                                                             saved (updated) in
                                                            to SP field of runn
                                                            ing thread's TCB
   26 0000000E         
   27 0000000E B501            PUSH             {R0,LR}
   28 00000010 F7FF FFFE       BL               Scheduler
   29 00000014 E8BD 4001       POP              {R0,LR}
   30 00000018 6801            LDR              R1, [R0]    ;; 6) R1 = RunPt, n
                                                            ew threa
   31 0000001A         
   32 0000001A         ; without linking C file
   33 0000001A         ;LDR  R1, [R1, #4]  ; Get next field in running thread's
                        TCB
   34 0000001A         ;STR  R1, [R0]   ; Update RunPt to next
   35 0000001A         
   36 0000001A F8D1 D000       LDR              SP, [R1]    ; Update system's S
                                                            P with next thread'
                                                            s SP
   37 0000001E E8BD 0FF0       POP              {R4-R11}
   38 00000022         
   39 00000022         
   40 00000022 B662            CPSIE            I           ; 9) tasks run with
                                                             interrupts enabled
                                                            
   41 00000024 4770            BX               LR          ; 10) restore R0-R3
                                                            ,R12,LR,PC,PSR



ARM Macro Assembler    Page 2 


   42 00000026         
   43 00000026         StartOS
   44 00000026         
   45 00000026 4807            LDR              R0, =RunPt  ;
   46 00000028 6801            LDR              R1, [R0]    ; 
   47 0000002A F8D1 D000       LDR              SP, [R1]    ;
   48 0000002E         
   49 0000002E E8BD 0FF0       POP              {R4-R11}
   50 00000032 BC0F            POP              {R0-R3}
   51 00000034 F85D CB04       POP              {R12}
   52 00000038 B001            ADD              SP, SP, #4
   53 0000003A F85D EB04       POP              {LR}        ; why??
   54 0000003E B001            ADD              SP, SP, #4
   55 00000040         
   56 00000040 B662            CPSIE            I           ; Enable interrupts
                                                             at processor level
                                                            
   57 00000042 4770            BX               LR          ; start first threa
                                                            d
   58 00000044         
   59 00000044                 ALIGN
   60 00000044                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\osasm.d -o.\objects\osasm.o -I.\RTE\_Target -IC:\Users\C
alvin\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\Cal
vin\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predef
ine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --predefine="_RTE_
 SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\listings\osasm.lst osasm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 9 in file osasm.s
   Uses
      None
Comment: .text unused
StartOS 00000026

Symbol: StartOS
   Definitions
      At line 43 in file osasm.s
   Uses
      At line 15 in file osasm.s
Comment: StartOS used once
SysTick_Handler 00000000

Symbol: SysTick_Handler
   Definitions
      At line 20 in file osasm.s
   Uses
      At line 16 in file osasm.s
Comment: SysTick_Handler used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

RunPt 00000000

Symbol: RunPt
   Definitions
      At line 14 in file osasm.s
   Uses
      At line 23 in file osasm.s
      At line 45 in file osasm.s

Scheduler 00000000

Symbol: Scheduler
   Definitions
      At line 17 in file osasm.s
   Uses
      At line 28 in file osasm.s
Comment: Scheduler used once
2 symbols
341 symbols in table
